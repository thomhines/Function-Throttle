/*
* Function Throttle
* Control how often a function gets invoked from within the function itself.
* Copyright (c) 2018 Thom Hines
* Licensed under MIT.
* @author Thom Hines
* https://github.com/thomhines/Function-Throttle
* @version 3
*/


function debounce(t,i){var a,e,r;t===parseInt(t)?e=t:"object"==typeof t&&(r=t),i&&(r=i),e||(e=100),r||(r={}),a=r.function?r.function:arguments.callee.caller.name,r.arguments?args=r.arguments:arguments.callee.caller.arguments?args=arguments.callee.caller.arguments:args=[],void 0==r.leading&&(r.leading=!1),void 0==r.trailing&&(r.trailing=!0),void 0==r.maxWait&&(r.maxWait=!1);var l=window[a];if("run_immediately"==ft_maxwait_timers[a])return clearTimeout(ft_maxwait_timers[a]),ft_maxwait_timers[a]=null,ft_trailing_disabled[a]=1,!1;if(ft_trailing_disabled[a]=0,"run_immediately"==ft_timers[a])return clearTimeout(ft_timers[a]),clearTimeout(ft_maxwait_timers[a]),ft_timers[a]=null,ft_maxwait_timers[a]=null,!1;var n=!1;return r.leading&&null==ft_timers[a]&&(n=!0),clearTimeout(ft_timers[a]),ft_timers[a]=setTimeout(function(){r.trailing&&!ft_trailing_disabled[a]?(ft_timers[a]="run_immediately",l.apply(null,args)):ft_timers[a]=null},e),r.maxWait&&!ft_maxwait_timers[a]&&(ft_maxwait_timers[a]=setTimeout(function(){r.leading&&(clearTimeout(ft_timers[a]),clearTimeout(ft_maxwait_timers[a]),ft_timers[a]=null,ft_maxwait_timers[a]=null),r.trailing&&(ft_maxwait_timers[a]="run_immediately",l.apply(null,args))},r.maxWait)),!n}function throttle(t,i){var a,e;return t===parseInt(t)?a=t:"object"==typeof t&&(e=t),i&&(e=i),a||(a=100),e||(e={}),e.function?e.function=e.function:e.function=arguments.callee.caller.name,e.arguments?e.arguments=e.arguments:arguments.callee.caller.arguments?e.arguments=arguments.callee.caller.arguments:e.arguments=[],void 0==e.leading&&(e.leading=!0),void 0==e.trailing&&(e.trailing=!1),void 0==e.maxWait&&(e.maxWait=a),debounce(a,e)}var ft_timers={},ft_maxwait_timers={},ft_trailing_disabled={};
