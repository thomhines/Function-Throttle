/*
* Function Throttle
* Control how often a function gets invoked from within the function itself.
* Copyright (c) 2018 Thom Hines
* Licensed under MIT.
* @author Thom Hines
* https://github.com/thomhines/Function-Throttle
* @version 1
*/


function debounce(t,i,e){var a,r,m;"string"==typeof t?a=t:t===parseInt(t)?r=t:"object"==typeof t&&(m=t),i===parseInt(i)?r=i:"object"==typeof i&&(m=i),e&&(m=e),a||(a=arguments.callee.caller.name),r||(r=100),m||(m={}),void 0==m.leading&&(m.leading=!1),void 0==m.trailing&&(m.trailing=!0),void 0==m.maxWait&&(m.maxWait=!1);var n=window[a];if("run_immediately"==ft_maxwait_timers[a])return clearTimeout(ft_maxwait_timers[a]),ft_maxwait_timers[a]=null,ft_trailing_disabled[a]=1,!1;if(ft_trailing_disabled[a]=0,"run_immediately"==ft_timers[a])return clearTimeout(ft_timers[a]),clearTimeout(ft_maxwait_timers[a]),ft_timers[a]=null,ft_maxwait_timers[a]=null,!1;var l=!1;return m.leading&&null==ft_timers[a]&&(l=!0),clearTimeout(ft_timers[a]),ft_timers[a]=setTimeout(function(){m.trailing&&!ft_trailing_disabled[a]?(ft_timers[a]="run_immediately",n()):ft_timers[a]=null},r),m.maxWait&&!ft_maxwait_timers[a]&&(ft_maxwait_timers[a]=setTimeout(function(){ft_maxwait_timers[a]="run_immediately",n()},m.maxWait)),!l}function throttle(t,i,e){var a,r,m;return"string"==typeof t?a=t:t===parseInt(t)?r=t:"object"==typeof t&&(m=t),i===parseInt(i)?r=i:"object"==typeof i&&(m=i),e&&(m=e),a||(a=arguments.callee.caller.name),r||(r=100),m||(m={}),m.maxWait=r,debounce(a,r,m)}var ft_timers={},ft_maxwait_timers={},ft_trailing_disabled={};
